// <auto-generated />
using GraphQL_Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GraphQL_Data.Migrations
{
    [DbContext(typeof(GraphQLContext))]
    [Migration("20210901014102_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GraphQL_Domain.Clinica", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.ToTable("CLINICAS");
                });

            modelBuilder.Entity("GraphQL_Domain.Medico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClinicaId")
                        .HasColumnType("bigint")
                        .HasColumnName("CLINICA_ID");

                    b.Property<string>("Crm")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CRM");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.HasIndex("ClinicaId");

                    b.ToTable("MEDICOS");
                });

            modelBuilder.Entity("GraphQL_Domain.Paciente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Altura")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ALTURA");

                    b.Property<long>("ClinicaId")
                        .HasColumnType("bigint")
                        .HasColumnName("CLINICA_ID");

                    b.Property<int>("Idade")
                        .HasMaxLength(3)
                        .HasColumnType("int")
                        .HasColumnName("IDADE");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NOME");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PESO");

                    b.HasKey("Id");

                    b.HasIndex("ClinicaId");

                    b.ToTable("PACIENTES");
                });

            modelBuilder.Entity("GraphQL_Domain.Medico", b =>
                {
                    b.HasOne("GraphQL_Domain.Clinica", "Clinica")
                        .WithMany("Medicos")
                        .HasForeignKey("ClinicaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Clinica");
                });

            modelBuilder.Entity("GraphQL_Domain.Paciente", b =>
                {
                    b.HasOne("GraphQL_Domain.Clinica", "Clinica")
                        .WithMany("Pacientes")
                        .HasForeignKey("ClinicaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Clinica");
                });

            modelBuilder.Entity("GraphQL_Domain.Clinica", b =>
                {
                    b.Navigation("Medicos");

                    b.Navigation("Pacientes");
                });
#pragma warning restore 612, 618
        }
    }
}
